root : WS arrayBody;

element : (type WS)? ((primitive WS) | object | array);
type : TYPE_OPEN (TYPE_LETTER | ESCAPE_PREFIX ESCAPE)* TYPE_CLOSE;
primitive : text;
object : OBJECT_OPEN WS objectBody OBJECT_CLOSE WS;
objectBody : (pair (ELEMENT_SEPARATOR WS objectBody )? )?;
pair : key WS PAIR_SEPARATOR WS element;
key : text;
array : ARRAY_OPEN WS arrayBody ARRAY_CLOSE WS;
arrayBody : (element (ELEMENT_SEPARATOR WS arrayBody )? )?;
text : WORD | (TEXT_OPEN_CLOSE (LETTER | ESCAPE_PREFIX ESCAPE)* TEXT_OPEN_CLOSE);
WS : #([ \t\n] | '*' ( ~[*\\] | '\\' . )* '*')*;
ELEMENT_SEPARATOR : #',';
OBJECT_OPEN : #'{';
OBJECT_CLOSE : #'}';
ARRAY_OPEN : #'[';
ARRAY_CLOSE : #']';
TYPE_OPEN : #'(';
TYPE_CLOSE : #')';
TEXT_OPEN_CLOSE : #'"';
PAIR_SEPARATOR : #':';
WORD : (~[" \t\n,:{}[\](\)])+;
TYPE_LETTER : ~[)\\];
LETTER : ~["\\];
ESCAPE_PREFIX : #'\\';
ESCAPE : .;